generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
}

enum TransactionStatus {
  PENDING
  SUCCEEDED
  FAILED
  CANCELED
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  firstName String?
  lastName  String?
  wallet    Wallet?
  auditLogs AuditLog[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Wallet {
  id           String        @id @default(uuid())
  userId       String        @unique
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  balance      Decimal       @default(0)
  currency     String        @default("USD")
  version      Int           @default(0)
  transactions Transaction[]
  auditLogs    AuditLog[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id                String            @id @default(uuid())
  walletId          String
  wallet            Wallet            @relation(fields: [walletId], references: [id], onDelete: Cascade)
  type              TransactionType
  status            TransactionStatus
  amount            Decimal
  currency          String            @default("USD")
  externalReference String?
  processor         String?
  processorPayload  Json?
  idempotencyKey    String?
  metadata          Json?
  occurredAt        DateTime          @default(now())
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt

  @@unique([walletId, idempotencyKey])
  @@index([walletId, occurredAt])
  @@index([idempotencyKey])
}

model AuditLog {
  id         String   @id @default(uuid())
  walletId   String?
  wallet     Wallet?  @relation(fields: [walletId], references: [id], onDelete: SetNull)
  userId     String?
  user       User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  action     String
  entityType String
  entityId   String?
  context    Json?
  createdAt  DateTime @default(now())

  @@index([userId])
  @@index([walletId])
  @@index([entityType, entityId])
}
